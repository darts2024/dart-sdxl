name: Publish to GCR
on:
  push:
    branches:
      - main
    tags:

  pull_request:
    branches:
      - main

  workflow_dispatch:
    inputs:
      runs-on:
        type: choice
        description: "Operating system to run the job on"
        options:
          - self-hosted
          - ubuntu-latest
        required: true

# concurrency:
#   group: ${{ github.workflow }}-${{ github.ref }}-${{github.event.inputs.runs-on }}
#   cancel-in-progress: false

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PUSH_TAG: ${{github.repository}}:latest
  REPO: ${{github.repository}}

jobs:
  build-and-push-image:
    # concurrency:
    #   group: heavy-disk-usage
    #   cancel-in-progress: false

    runs-on: ${{ github.event.inputs.runs-on || 'ubuntu-latest' }}
    # runs-on: hiro
    # runs-on: self-hosted //avast doesn't support docker even if installed
    # runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      #          fetch-tags: true

      - uses: docker-practice/actions-setup-docker@master
        if: ${{  github.event.inputs.runs-on ||  'ubuntu-latest' != 'ubuntu-latest' }}
        timeout-minutes: 12

      - name: Log in to the Container registry
        if: false #${{ github.event.inputs.runs-on }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

          # https://github.com/marketplace/actions/docker-metadata-action#images-input
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          # base for tags
          images: |
            ${{ env.REGISTRY }}/${{env.IMAGE_NAME}}
            ${{ env.REGISTRY }}/sdxl
            ${{ env.REGISTRY}}/${{github.repository_owner}}/stable-diffusion

          tags: |
            type=schedule
            type=sha,format=short

            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr

            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Evaluate all tags
        run: |
          echo meta tags
          echo "${{ steps.meta.outputs.tags }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          # push: true
          build-args: HUGGINGFACE_TOKEN=${{secrets.HUGGINGFACE_TOKEN}}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels}}
          github-token: ${{github.token}}

          # cache-from: type=registry,ref=user/app:latest
          # cache-to: type=inline
          cache-from: type=registry,ref=user/app:buildcache
          cache-to: type=registry,ref=user/app:buildcache,mode=max
          # cache-from: type=gha Don't use cuz of cache limits our image size is way bigger than 10GB
          # cache-to: type=gha,mode=max
